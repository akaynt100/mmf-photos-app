{
  "root": true,
  "parser": "babel-eslint",
  "env": {
    "browser": true,
    "node": true
  },
  "extends": [
    "airbnb",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "globals": {
    "__ENV__"      : false,
    "__DEV__"      : false,
    "__PROD__"     : false,
    "__DEBUG__"    : false,
    "__TESTING__"  : false,
    "__VERSION__"  : false,
    "__REVISION__" : false
  },
  "plugins": [
    "import"
  ],
  "settings": {
    "import/resolver": "webpack"
  },
  /*
   * TODO: add comments to all other rules, and consider removing any exceptions
   * from airbnb eslint and style guides
   */
  "rules": {
    // [kabbi] Backend data requires snake_case, everything else we can control ourselves
    "camelcase": "off",
    "comma-dangle": [1, "never"],
    "key-spacing": [0, {
      "beforeColon": true,
      "afterColon": true
    }],
    "no-else-return": 0,
    "space-before-function-paren": [0, "always"],
    // TODO: consider turning on
    // [kabbi] I personally like it this way
    "react/jsx-space-before-closing": 0,
    // TODO: consider turning on
    // [kabbi] Currently there are too many non-stateless components
    "react/prefer-stateless-function": 0,
    // TODO: consider turning on
    // [kabbi] Currently there are too many bound functions
    "react/jsx-no-bind": 0,
    "react/jsx-quotes": [0, "single"],
    "react/no-multi-comp": 0,
    "react/sort-comp": 0,
    // TODO: consider turning on
    // [kabbi] We use too many single-line props to make code prettier
    "react/jsx-first-prop-new-line": 0,
    // [kabbi] Plays bad with array destructuring
    "array-bracket-spacing": 0,
    // [kabbi] We use this a lot, and I dont think its evil
    "no-param-reassign": [2, { 'props': false }],
    "func-names": 0,
    "one-var": 0,
    "no-undef": 2,
    // [kabbi] Its more of a style decision, so developer can see better.
    "quote-props": 0,
    // [kabbi] We are always exporting components as named exports. Maybe we shouldnt do so
    "import/no-named-as-default": 0,
    // [kabbi] Most used case is in promises, and it looks better without newlines
    "newline-per-chained-call": 0,
    // allows uppercase started functions to be called without new operators
    "new-cap": ["error", { "capIsNew": false }],
    'react/jsx-filename-extension': ['error', { extensions: ['.js'] }],
    'no-plusplus': 0,
    'no-mixed-operators': ['error', {
      groups: [
        ['&', '|', '^', '~', '<<', '>>', '>>>'],
        ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
        ['&&', '||'],
        ['in', 'instanceof']
      ],
      allowSamePrecedence: false
    }],
    'react/forbid-prop-types': ['error', { forbid: ['any'] }],
    // works bad with redux
    'react/no-unused-prop-types': 'off',
    'no-restricted-syntax': [
      'error',
      'ForInStatement',
      'LabeledStatement',
      'WithStatement',
    ],
    'import/first': 0,
    'import/no-webpack-loader-syntax': 0,
    'import/prefer-default-export': 0,
    'jsx-a11y/anchor-has-content': 0,
    // this rule doesnt work for children controls
    'jsx-a11y/label-has-for': 0,
    'jsx-a11y/no-static-element-interactions': 0,
    'no-continue': 0,
    'no-template-curly-in-string': 0,
    'react/no-unescaped-entities': 0,
    // todo: change to warning and replace all string usages with functional refs
    'react/no-string-refs': 0,
    'no-unused-vars': ['error', { 'argsIgnorePattern': '^_' }],
    'arrow-parens': "off",
    "import/no-unresolved": 1,
    "import/extensions": 1
  }
}
